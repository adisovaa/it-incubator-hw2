{"ast":null,"code":"const initState = {\n  themeId: 1\n};\nexport const themeReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'SET_THEME_ID':\n      return {\n        ...state,\n        themeId: action.payload.id\n      };\n    default:\n      return state;\n  }\n};\nexport const changeThemeId = id => ({\n  type: 'SET_THEME_ID',\n  payload: {\n    id\n  }\n}); // fix any","map":{"version":3,"names":["initState","themeId","themeReducer","state","action","type","payload","id","changeThemeId"],"sources":["/Users/admin/Desktop/new start/hws/it-incubator-hws2/src/s2-homeworks/hw12/bll/themeReducer.ts"],"sourcesContent":["type InitialState = typeof initState\n\nconst initState = {\n    themeId: 1,\n}\n\nexport const themeReducer = (state: InitialState = initState, action: ActionType): InitialState => {\n    switch (action.type) {\n        case 'SET_THEME_ID':\n            return {...state, themeId: action.payload.id}\n        default:\n            return state\n    }\n}\n\nexport const changeThemeId = (id: number): any => ({type: 'SET_THEME_ID', payload: {id}}) // fix any\n\ntype changeThemeIdActionType = ReturnType<typeof changeThemeId>\n\ntype ActionType = changeThemeIdActionType"],"mappings":"AAEA,MAAMA,SAAS,GAAG;EACdC,OAAO,EAAE;AACb,CAAC;AAED,OAAO,MAAMC,YAAY,GAAG,YAAuE;EAAA,IAAtEC,KAAmB,uEAAGH,SAAS;EAAA,IAAEI,MAAkB;EAC5E,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,cAAc;MACf,OAAO;QAAC,GAAGF,KAAK;QAAEF,OAAO,EAAEG,MAAM,CAACE,OAAO,CAACC;MAAE,CAAC;IACjD;MACI,OAAOJ,KAAK;EAAA;AAExB,CAAC;AAED,OAAO,MAAMK,aAAa,GAAID,EAAU,KAAW;EAACF,IAAI,EAAE,cAAc;EAAEC,OAAO,EAAE;IAACC;EAAE;AAAC,CAAC,CAAC,EAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}