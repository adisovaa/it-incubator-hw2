{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/new start/hws/it-incubator-hws2/src/s2-homeworks/hw11/HW11.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport s from './HW11.module.css';\nimport s2 from '../../s1-main/App.module.css';\nimport { restoreState } from '../hw06/localStorage/localStorage';\nimport SuperRange from './common/c7-SuperRange/SuperRange';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HW11() {\n  _s();\n  // for autotests // не менять // можно подсунуть в локалСторэдж нужные числа, чтоб увидеть как они отображаются\n  const [value1, setValue1] = useState(restoreState('hw11-value1', 0));\n  const [value2, setValue2] = useState(restoreState('hw11-value2', 100));\n  const change = (event, value) => {\n    // Проверяем, пришел ли массив значений (для двойного слайдера)\n    if (Array.isArray(value)) {\n      setValue1(value[0]);\n      setValue2(value[1]);\n    } else {\n      setValue1(value); // Обновляем только первое значение (для одиночного слайдера)\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: 'hw11',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s2.hwTitle,\n      children: \"Homework #11\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s2.hw,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.container,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.wrapper,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            id: 'hw11-value',\n            className: s.number,\n            children: value1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(SuperRange, {\n            id: 'hw11-single-slider',\n            value: value1,\n            onChange: change // используем функцию change с event\n            ,\n            min: 0,\n            max: 50\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.wrapper,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            id: 'hw11-value-1',\n            className: s.number,\n            children: value1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(SuperRange, {\n            id: 'hw11-double-slider',\n            value: [value1, value2] // передаем массив значений\n            ,\n            onChange: change // используем функцию change с event\n            ,\n            min: 0,\n            max: 100,\n            valueLabelDisplay: \"auto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            id: 'hw11-value-2',\n            className: s.number,\n            children: value2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_s(HW11, \"yg1NmVbnAuyl8NmlhQNYyX5aw6U=\");\n_c = HW11;\nexport default HW11;\nvar _c;\n$RefreshReg$(_c, \"HW11\");","map":{"version":3,"names":["React","useState","s","s2","restoreState","SuperRange","HW11","value1","setValue1","value2","setValue2","change","event","value","Array","isArray","hwTitle","hw","container","wrapper","number"],"sources":["/Users/admin/Desktop/new start/hws/it-incubator-hws2/src/s2-homeworks/hw11/HW11.tsx"],"sourcesContent":["import React, {useState} from 'react'\nimport s from './HW11.module.css'\nimport s2 from '../../s1-main/App.module.css'\nimport {restoreState} from '../hw06/localStorage/localStorage'\nimport SuperRange from './common/c7-SuperRange/SuperRange'\n\nfunction HW11() {\n    // for autotests // не менять // можно подсунуть в локалСторэдж нужные числа, чтоб увидеть как они отображаются\n    const [value1, setValue1] = useState<number>(restoreState<number>('hw11-value1', 0))\n    const [value2, setValue2] = useState<number>(restoreState<number>('hw11-value2', 100))\n\n    const change = (event: Event, value: number | number[]) => {\n        // Проверяем, пришел ли массив значений (для двойного слайдера)\n        if (Array.isArray(value)) {\n            setValue1(value[0]);\n            setValue2(value[1]);\n        } else {\n            setValue1(value); // Обновляем только первое значение (для одиночного слайдера)\n        }\n    }\n\n    return (\n        <div id={'hw11'}>\n            <div className={s2.hwTitle}>Homework #11</div>\n\n            <div className={s2.hw}>\n                <div className={s.container}>\n                    <div className={s.wrapper}>\n                        <span id={'hw11-value'} className={s.number}>{value1}</span>\n                        <SuperRange\n                            id={'hw11-single-slider'}\n                            value={value1}\n                            onChange={change} // используем функцию change с event\n                            min={0}\n                            max={50}\n                        />\n                    </div>\n                    <div className={s.wrapper}>\n                        <span id={'hw11-value-1'} className={s.number}>{value1}</span>\n                        <SuperRange\n                            id={'hw11-double-slider'}\n                            value={[value1, value2]} // передаем массив значений\n                            onChange={change} // используем функцию change с event\n                            min={0}\n                            max={100}\n                            valueLabelDisplay=\"auto\"\n                        />\n                        <span id={'hw11-value-2'} className={s.number}>{value2}</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default HW11\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,CAAC,MAAM,mBAAmB;AACjC,OAAOC,EAAE,MAAM,8BAA8B;AAC7C,SAAQC,YAAY,QAAO,mCAAmC;AAC9D,OAAOC,UAAU,MAAM,mCAAmC;AAAA;AAE1D,SAASC,IAAI,GAAG;EAAA;EACZ;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAASG,YAAY,CAAS,aAAa,EAAE,CAAC,CAAC,CAAC;EACpF,MAAM,CAACK,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAASG,YAAY,CAAS,aAAa,EAAE,GAAG,CAAC,CAAC;EAEtF,MAAMO,MAAM,GAAG,CAACC,KAAY,EAAEC,KAAwB,KAAK;IACvD;IACA,IAAIC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,EAAE;MACtBL,SAAS,CAACK,KAAK,CAAC,CAAC,CAAC,CAAC;MACnBH,SAAS,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC;IACvB,CAAC,MAAM;MACHL,SAAS,CAACK,KAAK,CAAC,CAAC,CAAC;IACtB;EACJ,CAAC;;EAED,oBACI;IAAK,EAAE,EAAE,MAAO;IAAA,wBACZ;MAAK,SAAS,EAAEV,EAAE,CAACa,OAAQ;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAmB,eAE9C;MAAK,SAAS,EAAEb,EAAE,CAACc,EAAG;MAAA,uBAClB;QAAK,SAAS,EAAEf,CAAC,CAACgB,SAAU;QAAA,wBACxB;UAAK,SAAS,EAAEhB,CAAC,CAACiB,OAAQ;UAAA,wBACtB;YAAM,EAAE,EAAE,YAAa;YAAC,SAAS,EAAEjB,CAAC,CAACkB,MAAO;YAAA,UAAEb;UAAM;YAAA;YAAA;YAAA;UAAA,QAAQ,eAC5D,QAAC,UAAU;YACP,EAAE,EAAE,oBAAqB;YACzB,KAAK,EAAEA,MAAO;YACd,QAAQ,EAAEI,MAAO,CAAC;YAAA;YAClB,GAAG,EAAE,CAAE;YACP,GAAG,EAAE;UAAG;YAAA;YAAA;YAAA;UAAA,QACV;QAAA;UAAA;UAAA;UAAA;QAAA,QACA,eACN;UAAK,SAAS,EAAET,CAAC,CAACiB,OAAQ;UAAA,wBACtB;YAAM,EAAE,EAAE,cAAe;YAAC,SAAS,EAAEjB,CAAC,CAACkB,MAAO;YAAA,UAAEb;UAAM;YAAA;YAAA;YAAA;UAAA,QAAQ,eAC9D,QAAC,UAAU;YACP,EAAE,EAAE,oBAAqB;YACzB,KAAK,EAAE,CAACA,MAAM,EAAEE,MAAM,CAAE,CAAC;YAAA;YACzB,QAAQ,EAAEE,MAAO,CAAC;YAAA;YAClB,GAAG,EAAE,CAAE;YACP,GAAG,EAAE,GAAI;YACT,iBAAiB,EAAC;UAAM;YAAA;YAAA;YAAA;UAAA,QAC1B,eACF;YAAM,EAAE,EAAE,cAAe;YAAC,SAAS,EAAET,CAAC,CAACkB,MAAO;YAAA,UAAEX;UAAM;YAAA;YAAA;YAAA;UAAA,QAAQ;QAAA;UAAA;UAAA;UAAA;QAAA,QAC5D;MAAA;QAAA;QAAA;QAAA;MAAA;IACJ;MAAA;MAAA;MAAA;IAAA,QACJ;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd;AAAC,GA/CQH,IAAI;AAAA,KAAJA,IAAI;AAiDb,eAAeA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}