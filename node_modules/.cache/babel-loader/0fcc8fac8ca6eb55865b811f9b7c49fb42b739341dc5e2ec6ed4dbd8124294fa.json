{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/new start/hws/it-incubator-hws2/src/s2-homeworks/hw02/HW2.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Affairs from './affairs/Affairs';\nimport s2 from '../../s1-main/App.module.css';\n\n/*\n* 1 - описать типы AffairPriorityType, AffairType\n* 2 - указать нужный тип для defaultAffairs\n* 3 - дописать типы и логику функции filterAffairs и проверить её тестами\n* 4 - выполнить пункт 3 для функции deleteAffair\n* 5 - указать нужный тип в useState с affairs\n* 6 - дописать тип и логику функции deleteAffairCallback\n* 7 - в файле Affairs.tsx дописать типизацию пропсов\n* 8 - в файле Affairs.tsx дописать логику функций setAll, setHigh, setMiddle, setLow\n* 9 - в файле Affair.tsx дописать типизацию пропсов\n* 10 - в файле Affair.tsx дописать функции deleteCallback и использовать\n* 11 - в файле Affair.tsx отобразить приходящие данные\n* */\n\n// types\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// constants\nconst defaultAffairs = [\n// need to fix any\n{\n  _id: 1,\n  name: 'React',\n  priority: 'high'\n},\n// студенты могут изменить содержимое name и количество элементов в массиве, ...priority не менять!\n{\n  _id: 2,\n  name: 'anime',\n  priority: 'low'\n}, {\n  _id: 3,\n  name: 'games',\n  priority: 'low'\n}, {\n  _id: 4,\n  name: 'work',\n  priority: 'high'\n}, {\n  _id: 5,\n  name: 'html & css',\n  priority: 'middle'\n}];\n\n// pure helper functions\nexport const filterAffairs = (affairs, filter) => {\n  // need to fix any\n  if (filter === 'all') return;\n  return affairs.filter(a => a.priority === filter);\n};\nexport const deleteAffair = (affairs, _id) => {\n  // need to fix any\n\n  return affairs.filter(a => a._id !== _id);\n};\nfunction HW2() {\n  _s();\n  const [affairs, setAffairs] = useState(defaultAffairs); // need to fix any\n  const [filter, setFilter] = useState('all');\n  const filteredAffairs = filterAffairs(affairs, filter);\n  const deleteAffairCallback = _id => {\n    // need to fix any\n    setAffairs(affairs.filter(a => a._id !== _id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: 'hw2',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s2.hwTitle,\n      children: \"Homework #2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s2.hw,\n      children: /*#__PURE__*/_jsxDEV(Affairs, {\n        data: filteredAffairs,\n        setFilter: setFilter,\n        deleteAffairCallback: deleteAffairCallback,\n        filter: filter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n_s(HW2, \"+TelzeQZkAtJRt5r5kdeeufTCcc=\");\n_c = HW2;\nexport default HW2;\nvar _c;\n$RefreshReg$(_c, \"HW2\");","map":{"version":3,"names":["React","useState","Affairs","s2","defaultAffairs","_id","name","priority","filterAffairs","affairs","filter","a","deleteAffair","HW2","setAffairs","setFilter","filteredAffairs","deleteAffairCallback","hwTitle","hw"],"sources":["/Users/admin/Desktop/new start/hws/it-incubator-hws2/src/s2-homeworks/hw02/HW2.tsx"],"sourcesContent":["import React, {useState} from 'react'\nimport Affairs from './affairs/Affairs'\nimport s2 from '../../s1-main/App.module.css'\n\n/*\n* 1 - описать типы AffairPriorityType, AffairType\n* 2 - указать нужный тип для defaultAffairs\n* 3 - дописать типы и логику функции filterAffairs и проверить её тестами\n* 4 - выполнить пункт 3 для функции deleteAffair\n* 5 - указать нужный тип в useState с affairs\n* 6 - дописать тип и логику функции deleteAffairCallback\n* 7 - в файле Affairs.tsx дописать типизацию пропсов\n* 8 - в файле Affairs.tsx дописать логику функций setAll, setHigh, setMiddle, setLow\n* 9 - в файле Affair.tsx дописать типизацию пропсов\n* 10 - в файле Affair.tsx дописать функции deleteCallback и использовать\n* 11 - в файле Affair.tsx отобразить приходящие данные\n* */\n\n// types\nexport type AffairPriorityType = 'low' | 'middle' | 'high'   // need to fix any\nexport type AffairType = {\n    _id: number // need to fix any\n    name: string // need to fix any\n    priority: AffairPriorityType\n}\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: AffairType[] = [ // need to fix any\n    {_id: 1, name: 'React', priority: 'high'}, // студенты могут изменить содержимое name и количество элементов в массиве, ...priority не менять!\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: AffairType[], filter: FilterType): AffairType[] => { // need to fix any\n    if (filter === 'all') return \n    return affairs.filter(a => a.priority === filter)\n}\n\nexport const deleteAffair = (affairs: AffairType[], _id: number): AffairType[] => { // need to fix any\n\n    return affairs.filter(a => a._id !== _id)\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState<AffairType[]>(defaultAffairs) // need to fix any\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => { // need to fix any\n        setAffairs(affairs.filter(a => a._id !== _id))\n    }\n\n    return (\n        <div id={'hw2'}>\n            <div className={s2.hwTitle}>Homework #2</div>\n            <div className={s2.hw}>\n                <Affairs\n                    data={filteredAffairs}\n                    setFilter={setFilter}\n                    deleteAffairCallback={deleteAffairCallback}\n                    filter={filter}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default HW2\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,OAAO,MAAM,mBAAmB;AACvC,OAAOC,EAAE,MAAM,8BAA8B;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AASA;AACA,MAAMC,cAA4B,GAAG;AAAE;AACnC;EAACC,GAAG,EAAE,CAAC;EAAEC,IAAI,EAAE,OAAO;EAAEC,QAAQ,EAAE;AAAM,CAAC;AAAE;AAC3C;EAACF,GAAG,EAAE,CAAC;EAAEC,IAAI,EAAE,OAAO;EAAEC,QAAQ,EAAE;AAAK,CAAC,EACxC;EAACF,GAAG,EAAE,CAAC;EAAEC,IAAI,EAAE,OAAO;EAAEC,QAAQ,EAAE;AAAK,CAAC,EACxC;EAACF,GAAG,EAAE,CAAC;EAAEC,IAAI,EAAE,MAAM;EAAEC,QAAQ,EAAE;AAAM,CAAC,EACxC;EAACF,GAAG,EAAE,CAAC;EAAEC,IAAI,EAAE,YAAY;EAAEC,QAAQ,EAAE;AAAQ,CAAC,CACnD;;AAED;AACA,OAAO,MAAMC,aAAa,GAAG,CAACC,OAAqB,EAAEC,MAAkB,KAAmB;EAAE;EACxF,IAAIA,MAAM,KAAK,KAAK,EAAE;EACtB,OAAOD,OAAO,CAACC,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACJ,QAAQ,KAAKG,MAAM,CAAC;AACrD,CAAC;AAED,OAAO,MAAME,YAAY,GAAG,CAACH,OAAqB,EAAEJ,GAAW,KAAmB;EAAE;;EAEhF,OAAOI,OAAO,CAACC,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACN,GAAG,KAAKA,GAAG,CAAC;AAC7C,CAAC;AAED,SAASQ,GAAG,GAAG;EAAA;EACX,MAAM,CAACJ,OAAO,EAAEK,UAAU,CAAC,GAAGb,QAAQ,CAAeG,cAAc,CAAC,EAAC;EACrE,MAAM,CAACM,MAAM,EAAEK,SAAS,CAAC,GAAGd,QAAQ,CAAa,KAAK,CAAC;EAEvD,MAAMe,eAAe,GAAGR,aAAa,CAACC,OAAO,EAAEC,MAAM,CAAC;EACtD,MAAMO,oBAAoB,GAAIZ,GAAW,IAAK;IAAE;IAC5CS,UAAU,CAACL,OAAO,CAACC,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACN,GAAG,KAAKA,GAAG,CAAC,CAAC;EAClD,CAAC;EAED,oBACI;IAAK,EAAE,EAAE,KAAM;IAAA,wBACX;MAAK,SAAS,EAAEF,EAAE,CAACe,OAAQ;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAkB,eAC7C;MAAK,SAAS,EAAEf,EAAE,CAACgB,EAAG;MAAA,uBAClB,QAAC,OAAO;QACJ,IAAI,EAAEH,eAAgB;QACtB,SAAS,EAAED,SAAU;QACrB,oBAAoB,EAAEE,oBAAqB;QAC3C,MAAM,EAAEP;MAAO;QAAA;QAAA;QAAA;MAAA;IACjB;MAAA;MAAA;MAAA;IAAA,QACA;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd;AAAC,GAtBQG,GAAG;AAAA,KAAHA,GAAG;AAwBZ,eAAeA,GAAG;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}